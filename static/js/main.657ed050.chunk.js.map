{"version":3,"sources":["components/To-Do-Items.jsx","components/App.jsx","index.js"],"names":["ToDoItems","props","React","createElement","onClick","onClicked","id","listItems","App","_useState","useState","_useState2","_slicedToArray","item","setItem","_useState3","_useState4","list","setList","deleteItem","console","log","prevItems","filter","index","className","onChange","event","inputValue","target","value","type","prevValue","concat","_toConsumableArray","map","todoItems","key","ReactDOM","render","document","getElementById"],"mappings":"4MAQeA,MAPf,SAAmBC,GACjB,OACEC,IAAAC,cAAA,OAAKC,QAAS,kBAAMH,EAAMI,UAAUJ,EAAMK,MACxCJ,IAAAC,cAAA,UAAKF,EAAMM,aCiDFC,MAnDf,WACE,IAAAC,EAAwBC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,EAAwBL,mBAAS,IAAGM,EAAAJ,YAAAG,EAAA,GAA7BE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GAWpB,SAASG,EAAWb,GAClBc,QAAQC,IAAI,oBACZD,QAAQC,IAAIf,GACZY,GAAQ,SAACI,GACP,OAAOA,EAAUC,QAAO,SAACN,EAAMO,GAC7B,OAAOA,IAAUlB,QAIvB,OACEJ,IAAAC,cAAA,OAAKsB,UAAU,aACbvB,IAAAC,cAAA,OAAKsB,UAAU,WACbvB,IAAAC,cAAA,UAAI,eAEND,IAAAC,cAAA,OAAKsB,UAAU,QACbvB,IAAAC,cAAA,SAAOuB,SAzBb,SAAsBC,GACpB,IAAMC,EAAaD,EAAME,OAAOC,MAChChB,EAAQc,IAuB2BG,KAAK,OAAOD,MAAOjB,IAClDX,IAAAC,cAAA,UAAQC,QAtBd,WACEc,GAAQ,SAACc,GACP,MAAM,GAANC,OAAAC,YAAWF,GAAS,CAAEnB,OAExBC,EAAQ,MAmBFZ,IAAAC,cAAA,YAAM,SAGVD,IAAAC,cAAA,OAAKsB,UAAU,iBACbvB,IAAAC,cAAA,UACGc,EAAKkB,KAAI,SAACC,EAAWZ,GACpB,OACEtB,IAAAC,cAACH,EAAS,CACRqC,IAAKb,EACLlB,GAAIkB,EACJjB,UAAW6B,EACX/B,UAAWc,WCvC3BmB,IAASC,OAAOrC,IAAAC,cAACK,EAAG,MAAKgC,SAASC,eAAe,U","file":"static/js/main.657ed050.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nfunction ToDoItems(props) {\r\n  return (\r\n    <div onClick={() => props.onClicked(props.id)}>\r\n      <li>{props.listItems}</li>\r\n    </div>\r\n  );\r\n}\r\nexport default ToDoItems;\r\n","import React, { useState } from \"react\";\nimport ToDoItems from \"./To-Do-Items\";\nfunction App() {\n  const [item, setItem] = useState(\"\");\n  const [list, setList] = useState([]);\n  function handleChange(event) {\n    const inputValue = event.target.value;\n    setItem(inputValue);\n  }\n  function handleClick() {\n    setList((prevValue) => {\n      return [...prevValue, item];\n    });\n    setItem(\"\");\n  }\n  function deleteItem(id) {\n    console.log(\"clicked to dlete\");\n    console.log(id);\n    setList((prevItems) => {\n      return prevItems.filter((list, index) => {\n        return index !== id;\n      });\n    });\n  }\n  return (\n    <div className=\"container\">\n      <div className=\"heading\">\n        <h1>To-Do List</h1>\n      </div>\n      <div className=\"form\">\n        <input onChange={handleChange} type=\"text\" value={item} />\n        <button onClick={handleClick}>\n          <span>Add</span>\n        </button>\n      </div>\n      <div className=\"list-position\">\n        <ul>\n          {list.map((todoItems, index) => {\n            return (\n              <ToDoItems\n                key={index}\n                id={index}\n                listItems={todoItems}\n                onClicked={deleteItem}\n              />\n            );\n          })}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n//CHALLENGE: Make this app work by applying what you've learnt.\n//1. When new text is written into the input, its state should be saved.\n//2. When the add button is pressed, the current data in the input should be\n//added to an array.\n//3. The <ul> should display all the array items as <li>s\n"],"sourceRoot":""}